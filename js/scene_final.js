// [ Сцена: финал на крыше ]
scenes.final = {
    //Объекты сцены -------------------------------------------------------------------------------
    objects: {
        //-----------------------------------------------------------------------------------------
        //Фон сцены -------------------------------------------------------------------------------
        //-----------------------------------------------------------------------------------------
        background: {
            //Ресурсы объекта ---------------------------------------------------------------------
            resources: {
                autos:    { type: 'image', src: '/res/final/autos.png' },
                street:  { type: 'image', src: '/res/final/street.png' },
                objects: { type: 'image', src: '/res/final/objects.png' }
            },
            
            //Инициализация объекта ---------------------------------------------------------------
            init: function() {
                //Создаем временные переменные
                this.tmp = {
                    x: 0, y:0,
                    width: game.scene.objects.background.resources.street.data.width,
                    img_auto: game.scene.objects.background.resources.autos.data,
                    img_street: game.scene.objects.background.resources.street.data,
                    img_objects: game.scene.objects.background.resources.objects.data,
                    
                    autos: {
                        show: false,
                        step: 0,
                        // [ x, y, тип авто, смещение от соседа, полоса ]
                        arr:  [ [0,0,0,140,0], [0,0,1,280,0], [0,0,2,80,1], [0,0,3,250,0] ],
                        last_ts: tmp.update_ts
                    }
                };
            },
            
            //Обновление объекта ------------------------------------------------------------------
            update: function() {
                //Получаем короткие ссылки
                let ltmp = this.tmp;
                let autos = ltmp.autos;
                let offset_x = ltmp.x;
                let offset_y = ltmp.y;
                let autos_x = 0;
                let autos_y = 0;
                
                //Движение машин( 15 сек - 500px )
                if( offset_x + game.canvas.width < ltmp.width - 350 ) {
                    autos.show = false;
                } else {
                    autos.show = true;
                    autos_x = ltmp.width - offset_x - 375;
                    autos_y = -40;
                }
                
                if( autos.show ) {
                    autos.step = Math.floor( ( tmp.update_ts - autos.last_ts ) * 500 / 15000 );
                    if( autos.step >= 500 ) autos.last_ts = tmp.update_ts;
                    
                    for( let i = 0, x = 0, y = 0; i < 4; i++) {
                        //Положение + смещение по "х"
                        x = ( autos.step + autos.arr[ i ][ 3 ] ) % 500;
                        y = Math.ceil( x * 0.75 );
                        
                        //Движение закончилось
                        if( x === 499 ) {
                            //Ставим случайную тачку
                            autos.arr[ i ][ 2 ] = Math.round(Math.random()) + ( autos.arr[ i ][ 2 ] > 1 ? 2 : 0 );
                            //Ставим случайную полосу
                            autos.arr[ i ][ 4 ] = Math.floor(Math.random() * 2); 
                        }
                        
                        //Обновляем координаты
                        if( autos.arr[ i ][ 2 ] > 1 ) {
                            autos.arr[ i ][ 0 ] = autos_x + x - ( autos.arr[ i ][ 4 ] === 0 ? 0 : 30 );
                            autos.arr[ i ][ 1 ] = autos_y + y;
                        } else {
                            autos.arr[ i ][ 0 ] = autos_x + 535 - x;
                            autos.arr[ i ][ 1 ] = autos_y + 375 - y;
                        }
                    }
                }
            },
            
            //Отрисовка объекта -------------------------------------------------------------------
            draw: function() {
                //Получаем короткие ссылки
                let ltmp = this.tmp;
                let context = game.canvas.context;
                let offset_x = ltmp.x;
                let offset_y = ltmp.y;
                
                //Заливаем фон черным
                context.fillStyle = '#000000';
                context.fillRect( 0, 0, game.canvas.width, game.canvas.height );
                
                //Рисуем улицу
                context.drawImage( ltmp.img_street, offset_x,offset_y, 640,360,   0,0, 640,360 );
                
                //Рисуем автомобили
                if( ltmp.autos.show ) {
                    for( let i = 0, dx = 0, dy = 0; i < 4; i++ ) {
                        context.drawImage( ltmp.img_auto, 
                            ltmp.autos.arr[ i ][ 2 ] * 50, 0, 50, 44, 
                            ltmp.autos.arr[ i ][ 0 ], ltmp.autos.arr[ i ][ 1 ],  50, 44
                        );
                    }
                }
                
                //Рисуем объекты на улице
                context.drawImage( ltmp.img_objects, offset_x,offset_y, 640,360,   0,0, 640,360 );
            }
        },
    
        //-----------------------------------------------------------------------------------------
        //Фон сцены -------------------------------------------------------------------------------
        //-----------------------------------------------------------------------------------------
        anon: {
            //Ресурсы объекта ---------------------------------------------------------------------
            resources: {},
            
            //Анимации объекта --------------------------------------------------------------------
            animations: {
                menu: [
                    [
                        //Параметры анимации [ ms_anim, next_index ]
                        [ 3000, 1 ],
                        //Ботинок (левый)
                        [ 49,137, 118,77,77,255,    44,133,  41,141,  59,141,  59,137,  54,133,  50,133 ],
                        //Голень (левая)
                        [ 46,127, 220,173,112,255,  41,113,  44,133,  50,133,  50,113 ],
                        //Бедро (левое)
                        [ 46,100, 255,82,48,255,    33,82,   30,97,   30,111,  32,116,  54,117,  58,112,  59,87 ],
                        //Ботинок (правый)
                        [ 42,142, 118,77,77,255,    33,137,  33,143,  35,144,  51,144,  52,141,  50,137,  41,137 ],
                        //Голень (правая)
                        [ 38,130, 220,173,112,255,  34,117,  33,137,  41,137,  44,119 ],
                        //Бедро (правое)
                        [ 42,104, 255,82,48,255,    31,83,   28,95,   29,118,  34,120,  44,121,  51,121,  53,112,  54,98 ],
                        //Торс
                        [ 48,68,  66,145,53,255,    43,41,   36,45,   33,62,   33,71,   28,83,   30,88,   46,92,   60,90,  63,48,  60,42,  56,41 ],
                        //Голова
                        [ 50,30,  220,173,112,255,  41,20,   39,30,   42,42,   58,42,   61,36,   64,30,   64,21 ],
                        //Шапка/прическа т. д.
                        [ 50,15,  136,96,0,255,     37,21,   37,13,   45,7,    52,6,    58,8,    66,13,   68,22,   53,23 ]
                    ],
                    [
                        //Параметры анимации [ ms_anim, next_index ]
                        [ 3000, 0 ],
                        //Ботинок (левый)
                        [ 49,137, 118,77,77,255,    44,133,  41,141,  59,141,  59,137,  54,133,  50,133 ],
                        //Голень (левая)
                        [ 46,127, 220,173,112,255,  41,113,  44,133,  50,133,  50,113 ],
                        //Бедро (левое)
                        [ 46,100, 255,82,48,255,    33,82,   30,97,   30,111,  32,116,  54,117,  58,112,  59,87 ],
                        //Ботинок (правый)
                        [ 42,142, 118,77,77,255,    33,137,  33,143,  35,144,  51,144,  52,141,  50,137,  41,137 ],
                        //Голень (правая)
                        [ 38,130, 220,173,112,255,  34,117,  33,137,  41,137,  44,119 ],
                        //Бедро (правое)
                        [ 42,104, 255,82,48,255,    31,83,   28,95,   29,118,  34,120,  44,121,  51,121,  53,112,  54,98 ],
                        //Торс
                        [ 48,68,  66,145,53,255,    43,41,   36,45,   33,62,   33,71,   28,83,   30,88,   46,92,   60,90,  63,48,  60,42,  56,41 ],
                        //Голова
                        [ 50,30,  220,173,112,255,  41,20,   39,30,   42,42,   58,42,   61,36,   64,30,   64,21 ],
                        //Шапка/прическа т. д.
                        [ 50,15,  136,96,0,255,     37,21,   37,13,   45,7,    52,6,    58,8,    66,13,   68,22,   53,23 ]
                    ]
                ]
            },
            
            //Инициализация объекта ---------------------------------------------------------------
            init: function() {
                //Создаем временные переменные
                this.tmp = {
                    x: 300,
                    y: 200,
                    rotation: 0,
                    line_color: [ 255, 255, 255, 255 ],
                    body: [
                        //Ботинок (левый)
                        [ 49,137, 0,0,0,255,    44,133,  41,141,  59,141,  59,137,  54,133,  50,133 ],
                        //Голень (левая)
                        [ 46,127, 0,0,0,255,  41,113,  44,133,  50,133,  50,113 ],
                        //Бедро (левое)
                        [ 46,100, 0,0,0,255,    33,82,   30,97,   30,111,  32,116,  54,117,  58,112,  59,87 ],
                        //Ботинок (правый)
                        [ 72,135, 0,0,0,255,    62,127,  59,128,  69,137,  76,140,  79,136,  76,131,  71,129 ],
                        //Голень (правая)
                        [ 70,115, 0,0,0,255,  64,106,  62,120,  63,130,  69,132,  76,111, 77,105 ],
                        //Бедро (правое)
                        [ 63,96, 0,0,0,255,    64,106,   57,101,   45,98,  35,95,  46,88,  55,81,  59,85,  68,89, 74,91,  77,94, 77,101, 77,107 ],
                        //Торс
                        [ 45,65,  0,0,0,255,   37,36,   30,71,   31,92,   36,96,   45,93,   53,87,   58,80,   59,61,  59,35 ],
                        //Голова
                        [ 53,25,  0,0,0,255,  68,8,   67,9,   51,6,   37,14,   36,29,   33,38,   52,45, 63,37, 66,25, 68,10, 69,9 ],
                        //Шапка/прическа т. д.
                        [ 67,9,  0,0,0,255,     67,9,   59,14,   47,15,    37,14,    47,15,    59,14,   54,31,   52,45, 54,31, 59,14 ]
                    ]
                };
            },
            
            //Обновление объекта ------------------------------------------------------------------
            update: function() {
                //Получаем короткие ссылки
                let ltmp = this.tmp;

            },
            
            //Отрисовка объекта -------------------------------------------------------------------
            draw: function() {
                //Получаем короткие ссылки
                let ltmp = this.tmp;
                let context = game.canvas.context;
                let temp_context = game.temp_canvas.context;
                let body = this.tmp.body;
                
                //Очищаем временный холст
                temp_context.clearRect( 0, 0, game.temp_canvas.width, game.temp_canvas.height );
                
                //Копируем с него пустой кусок
                let imageData = temp_context.getImageData( 0, 0, game.temp_canvas.width, game.temp_canvas.height );
                let imageBytes = imageData.data;
                let canvas_w = game.temp_canvas.width;
                
                //Рисуем на нем тело
                let i, j;
                let x0, y0, x1, y1;
                let Rf, Gf, Bf, Af;
                let Rc = this.tmp.line_color[ 0 ], Gc = this.tmp.line_color[ 1 ], Bc = this.tmp.line_color[ 2 ], Ac = this.tmp.line_color[ 3 ];
                for( i = 0; i < body.length; i++ ) {
                    //Окантовка части тела
                    for( j = 6, points_len = body[ i ].length; j < points_len; j +=2 ) {
                        x0 = body[ i ][ j ];
                        y0 = body[ i ][ j + 1 ];
                        if( j !== points_len - 2 ) {
                            x1 = body[ i ][ j + 2 ];
                            y1 = body[ i ][ j + 3 ];  
                        } else {
                            x1 = body[ i ][ 6 ];
                            y1 = body[ i ][ 7 ];  
                        }
                        
                        pixel_line( imageBytes, canvas_w, Rc - i, Gc, Bc, Ac, x0, y0, x1, y1 );
                    }
                    
                    //Заливка части тела
                    Rf = body[ i ][ 2 ];
                    Gf = body[ i ][ 3 ];
                    Bf = body[ i ][ 4 ];
                    Af = body[ i ][ 5 ];
                    pixel_full( imageBytes, canvas_w, Rc - i, Gc, Bc, Ac, body[ i ][ 0 ], body[ i ][ 1 ], Rf, Gf, Bf, Af );
                    
                    //Очистка верхнего ребра от окантовки (для основных частей тела)
                    if( i < 8 ) {
                        x0 = body[ i ][ points_len - 2 ];
                        y0 = body[ i ][ points_len - 1 ];
                        x1 = body[ i ][ 6 ];
                        y1 = body[ i ][ 7 ];  
                        pixel_line( imageBytes, canvas_w, Rf, Gf, Bf, Af, x0, y0, x1, y1 );
                    }
                }
                
                //Возвращаем на временный холст отрисованный кусок
                temp_context.putImageData( imageData, 0, 0 );
                
                //Копируем со временного холста на основной
                game.canvas.context.drawImage( game.temp_canvas.id, this.tmp.x, this.tmp.y );
            }
        }
    }
};
